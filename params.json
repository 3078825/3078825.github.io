{"name":"3078825.github.io","tagline":"ngx_image_thumb 图片自动生成缩略图模块","body":"# Nginx Image 缩略图 模块 \r\n\r\n##### 邮箱:<oopul@msn.com>\r\n##### 网址:<http://www.oupula.org>\r\n\r\n\r\n##### Readme for english : <https://github.com/3078825/nginx-image/blob/master/README_EN.md> \r\n###### My english so bad , you know.\r\n\r\n\r\n### 模块同时支持 Nginx 和 tengine\r\n\r\n- 本nginx模块主要功能是对请求的图片进行缩略/水印处理，支持文字水印和图片水印。\r\n- 支持自定义字体，文字大小，水印透明度，水印位置。\r\n- 判断原图是否是否大于指定尺寸才处理。\r\n....等等\r\n\r\n\r\n## 编译方法 \r\n\r\n编译前请确认您的系统已经安装了libcurl-dev  libgd2-dev  libpcre-dev 依赖库\r\n\r\n### Debian / Ubuntu 系统举例\r\n```bash\r\n# 如果你没有安装GCC相关环境才需要执行\r\n$ sudo apt-get install build-essential m4 autoconf automake make \r\n$ sudo apt-get install libgd2-noxpm-dev libcurl4-openssl-dev libpcre3-dev\r\n```\r\n\r\n### CentOS /RedHat / Fedora\r\n```bash\r\n# 请确保已经安装了gcc automake autoconf m4 \r\n$ sudo yum install gd-devel pcre-devel libcurl-devel \r\n```\r\n\r\n### FreeBSD / NetBSD / OpenBSD\r\n```\r\n# 不多说了，自己用port 把libcurl-dev libgd2-dev libpcre-dev 装上吧\r\n# 编译前请确保已经安装gcc automake autoconf m4 \r\n```\r\n\r\n### Windows\r\n```\r\n# 也支持的，不过要修改的代码太多了，包括Nginx本身，用VC++来编译\r\n# 嫌麻烦可以用cygwin来编译。还是不建议你这么做了，用Unix/Linux操作系统吧。\r\n```\r\n\r\n###下载nginx / tengine 源代码\r\n\r\n#### 然后下载本模块代码，并放在nginx源代码目录下\r\n#### 选Nginx还是Tengine,您自己看,两者选其一\r\n\r\n```bash\r\n# 下载Tengine\r\n$ wget http://tengine.taobao.org/download/tengine-1.4.5.tar.gz\r\n$ tar -zxvf tengine-1.4.5.tar.gz\r\n$ cd tengine-1.4.5\r\n```\r\n\r\n```bash\r\n# 下载Nginx\r\n$ wget http://nginx.org/download/nginx-1.4.0.tar.gz\r\n$ tar -zxvf nginx-1.4.0.tar.gz\r\n$ cd nginx-1.4.0\r\n```\r\n\r\n```bash\r\n$ wget https://github.com/3078825/nginx-image/archive/master.zip\r\n$ unzip master.zip\r\n$ ./configure --add-module=./nginx-image-master\r\n$ make\r\n$ sudo make install \r\n```\r\n\r\n## 配置方法\r\n\r\n打开 `nginx.conf` \r\n\r\n```bash\r\nvim /etc/nginx/nginx.conf \r\n# 该路径为默认路径，如果不在此处，自己找一下\r\n```\r\n\r\n在\r\n```apache\r\nlocation / {\r\n   root html;\r\n   #添加以下配置\r\n   image on;\r\n   image_output on;\r\n}\r\n```\r\n\r\n或者指定目录开启 \r\n```apache\r\nlocation /upload {\r\n   root html; \r\n   image on;\r\n   image_output on;\r\n}\r\n```\r\n\r\n\r\n## 其他参数说明：\r\n```apache\r\nimage on/off 是否开启缩略图功能,默认关闭\r\n\r\nimage_backend on/off 是否开启镜像服务，当开启该功能时，请求目录不存在的图片（判断原图），将自动从镜像服务器地址下载原图\r\n\r\nimage_backend_server 镜像服务器地址\r\n\r\nimage_output on/off 是否不生成图片而直接处理后输出 默认off\r\n\r\nimage_jpeg_quality 75 生成JPEG图片的质量 默认值75\r\n\r\nimage_water on/off 是否开启水印功能\r\n\r\nimage_water_type 0/1 水印类型 0:图片水印 1:文字水印\r\n\r\nimage_water_min 300 300 图片宽度 300 高度 300 的情况才添加水印\r\n\r\nimage_water_pos 0-9 水印位置 默认值9 0为随机位置,1为顶端居左,2为顶端居中,3为顶端居右,4为中部居左,5为中部居中,6为中部居右,7为底端居左,8为底端居中,9为底端居右\r\n\r\nimage_water_file 水印文件(jpg/png/gif),绝对路径或者相对路径的水印图片\r\n\r\nimage_water_transparent 水印透明度,默认20\r\n\r\nimage_water_text 水印文字 \"Power By Vampire\"\r\n\r\nimage_water_font_size 水印大小 默认 5\r\n\r\nimage_water_font 文字水印字体文件路径\r\n\r\nimage_water_color 水印文字颜色,默认 #000000\r\n```\r\n\r\n## 调用说明\r\n\r\n这里假设你的nginx 访问地址为 `http://127.0.0.1/`\r\n\r\n并在nginx网站根目录存在一个 `test.jpg` 的图片\r\n\r\n通过访问 \r\n\r\n`http://127.0.0.1/test.jpg!c300x200.jpg` 将会 生成/输出 `test.jpg` **300x200** 的缩略图\r\n\r\n其中 **c** 是生成图片缩略图的参数， **300** 是生成缩略图的 **宽度**      **200** 是生成缩略图的 **高度** \r\n\r\n一共可以生成**四**种不同类型的缩略图。\r\n\r\n支持 jpeg / png / gif (Gif生成后变成静态图片)\r\n\r\n\r\n**C** 参数按请求宽高比例从图片高度 **10%** 处开始截取图片，然后缩放/放大到指定尺寸（ **图片缩略图大小等于请求的宽高** ）\r\n \r\n**M** 参数按请求宽高比例居中截图图片，然后缩放/放大到指定尺寸（ **图片缩略图大小等于请求的宽高** ）\r\n\r\n**T** 参数按请求宽高比例按比例缩放/放大到指定尺寸（ **图片缩略图大小可能小于请求的宽高** )\r\n\r\n**W** 参数按请求宽高比例缩放/放大到指定尺寸，空白处填充白色背景颜色（ **图片缩略图大小等于请求的宽高** ）\r\n\r\n\r\n \r\n## 调用举例\r\n\r\n- http://127.0.0.1/test.jpg!c300x300.jpg\r\n\r\n- http://127.0.0.1/test.jpg!t300x300.jpg\r\n\r\n- http://127.0.0.1/test.jpg!m300x300.jpg\r\n\r\n- http://127.0.0.1/test.jpg!w300x300.jpg\r\n\r\n- http://127.0.0.1/test.c300x300.jpg\r\n\r\n- http://127.0.0.1/test.t300x300.jpg\r\n\r\n- http://127.0.0.1/test.m300x300.jpg\r\n\r\n- http://127.0.0.1/test.w300x300.jpg\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}